From 8f105d88195ada665dcff439ec98f661bc99bb10 Mon Sep 17 00:00:00 2001
From: Martin Wilck <mwilck@suse.com>
Date: Mon, 20 Apr 2020 22:17:33 +0200
Subject: [PATCH] dm mpath: switch paths in dm_blk_ioctl() code path
Patch-mainline: Submitted to dm-devel@redhat.com, 2020-04-20
References: bsc#1167574
Signed-off-by: Martin Wilck <mwilck@suse.com>

SCSI LUN passthrough code such as qemu's "scsi-block" device model
pass every IO to the host via SG_IO ioctls. Currently, dm-multipath
calls choose_pgpath() only in the block IO code path, not in the
ioctl code path (unless current_pgpath is NULL). This has the effect
that no path switching and thus no load balancing is done for
SCSI-passthrough IO, unless the active path fails.

Fix this by using the same logic in multipath_prepare_ioctl() as in
multipath_clone_and_map().

Note: The allegedly best path selection algorithm, service-time,
still wouldn't work perfectly, because the io size of the current
request is always set to 0. Changing that for the IO passthrough
case would require the ioctl cmd and arg to be passed to dm's
prepare_ioctl() method.
---
 drivers/md/dm-mpath.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

--- a/drivers/md/dm-mpath.c
+++ b/drivers/md/dm-mpath.c
@@ -1865,7 +1865,7 @@ static int multipath_prepare_ioctl(struc
 	int r;
 
 	current_pgpath = READ_ONCE(m->current_pgpath);
-	if (!current_pgpath)
+	if (!current_pgpath || !test_bit(MPATHF_QUEUE_IO, &m->flags))
 		current_pgpath = choose_pgpath(m, 0);
 
 	if (current_pgpath) {
