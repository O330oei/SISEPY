From: Josef Bacik <josef@toxicpanda.com>
Date: Wed, 21 Nov 2018 14:03:06 -0500
Subject: btrfs: check if there are free block groups for commit
Git-commit: d89dbefb8c5f7289ad404676869135501437c04e
Patch-mainline: v5.1-rc1
References: bsc#1165949

may_commit_transaction will skip committing the transaction if we don't
have enough pinned space or if we're trying to find space for a SYSTEM
chunk.  However, if we have pending free block groups in this transaction
we still want to commit as we may be able to allocate a chunk to make
our reservation.  So instead of just returning ENOSPC, check if we have
free block groups pending, and if so commit the transaction to allow us
to use that free space.

Reviewed-by: Omar Sandoval <osandov@fb.com>
Reviewed-by: Nikolay Borisov <nborisov@suse.com>
Signed-off-by: Josef Bacik <josef@toxicpanda.com>
Signed-off-by: David Sterba <dsterba@suse.com>
Acked-by: Nikolay Borisov <nborisov@suse.com>
---
 fs/btrfs/extent-tree.c |   24 ++++++++++++++++--------
 1 file changed, 16 insertions(+), 8 deletions(-)

--- a/fs/btrfs/extent-tree.c
+++ b/fs/btrfs/extent-tree.c
@@ -4967,8 +4967,17 @@ static int may_commit_transaction(struct
 
 	if (!bytes_needed)
 		return 0;
-	/* See if there is enough pinned space to make this reservation */
-	if (percpu_counter_compare(&space_info->total_bytes_pinned,
+	trans = btrfs_join_transaction(fs_info->extent_root);
+	if (IS_ERR(trans))
+		return PTR_ERR(trans);
+
+	/*
+	 * See if there is enough pinned space to make this reservation, or if
+	 * we have block groups that are going to be freed, allowing us to
+	 * possibly do a chunk allocation the next loop through.
+	 */
+	if (test_bit(BTRFS_TRANS_HAVE_FREE_BGS, &trans->transaction->flags) ||
+	    percpu_counter_compare(&space_info->total_bytes_pinned,
 				   bytes_needed) >= 0)
 		goto commit;
 
@@ -4977,7 +4986,7 @@ static int may_commit_transaction(struct
 	 * this reservation.
 	 */
 	if (space_info != delayed_rsv->space_info)
-		return -ENOSPC;
+		goto enospc;
 
 	spin_lock(&delayed_rsv->lock);
 	reclaim_bytes += delayed_rsv->reserved;
@@ -4992,15 +5001,14 @@ static int may_commit_transaction(struct
 
 	if (percpu_counter_compare(&space_info->total_bytes_pinned,
 				   bytes_needed) < 0) {
-		return -ENOSPC;
+		goto enospc;
 	}
 
 commit:
-	trans = btrfs_join_transaction(fs_info->extent_root);
-	if (IS_ERR(trans))
-		return -ENOSPC;
-
 	return btrfs_commit_transaction(trans);
+enospc:
+	btrfs_end_transaction(trans);
+	return -ENOSPC;
 }
 
 static int flush_space(struct btrfs_fs_info *fs_info,
